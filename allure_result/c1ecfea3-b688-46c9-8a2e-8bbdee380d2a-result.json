{"name": "test_new_order_counter_is_increacing_today", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//p[@class = 'OrderFeed_number__2MbrQ text text_type_digits-large'][2]\"}\n  (Session info: chrome=123.0.6312.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00694CA3+225091]\n\t(No symbol) [0x005C4DF1]\n\t(No symbol) [0x00469A7A]\n\t(No symbol) [0x004A175B]\n\t(No symbol) [0x004A188B]\n\t(No symbol) [0x004D7882]\n\t(No symbol) [0x004BF5A4]\n\t(No symbol) [0x004D5CB0]\n\t(No symbol) [0x004BF2F6]\n\t(No symbol) [0x004979B9]\n\t(No symbol) [0x0049879D]\n\tsqlite3_dbdata_init [0x00B09A43+4064547]\n\tsqlite3_dbdata_init [0x00B1104A+4094762]\n\tsqlite3_dbdata_init [0x00B0B948+4072488]\n\tsqlite3_dbdata_init [0x0080C9A9+930953]\n\t(No symbol) [0x005D07C4]\n\t(No symbol) [0x005CACE8]\n\t(No symbol) [0x005CAE11]\n\t(No symbol) [0x005BCA80]\n\tBaseThreadInitThunk [0x7736FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77967C5E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77967C2E+238]", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x0000024486FFC590>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc0a3413f46290f1b2343bee5bc057c9\")>\n\n    @allure.description('при создании нового заказа счётчик Выполнено за сегодня увеличивается')\n    def test_new_order_counter_is_increacing_today(self, browser):\n        order_page = OrderPage(browser)\n        login_page = LoginPage(browser)\n        login_page.authorize()\n        order_page.click_on_element(mp.order_list)\n>       all_time_orders = order_page.get_element_text(of.count_today)\n\ntests\\test_order_feed.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_pages.py:18: in get_element_text\n    element_dom = self.browser.find_element(*locator)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000244870BD220>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77967C5E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77967C2E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//p[@class = 'OrderFeed_number__2MbrQ text text_type_digits-large'][2]\"}\nE         (Session info: chrome=123.0.6312.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00694CA3+225091]\nE       \t(No symbol) [0x005C4DF1]\nE       \t(No symbol) [0x00469A7A]\nE       \t(No symbol) [0x004A175B]\nE       \t(No symbol) [0x004A188B]\nE       \t(No symbol) [0x004D7882]\nE       \t(No symbol) [0x004BF5A4]\nE       \t(No symbol) [0x004D5CB0]\nE       \t(No symbol) [0x004BF2F6]\nE       \t(No symbol) [0x004979B9]\nE       \t(No symbol) [0x0049879D]\nE       \tsqlite3_dbdata_init [0x00B09A43+4064547]\nE       \tsqlite3_dbdata_init [0x00B1104A+4094762]\nE       \tsqlite3_dbdata_init [0x00B0B948+4072488]\nE       \tsqlite3_dbdata_init [0x0080C9A9+930953]\nE       \t(No symbol) [0x005D07C4]\nE       \t(No symbol) [0x005CACE8]\nE       \t(No symbol) [0x005CAE11]\nE       \t(No symbol) [0x005BCA80]\nE       \tBaseThreadInitThunk [0x7736FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77967C5E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77967C2E+238]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "при создании нового заказа счётчик Выполнено за сегодня увеличивается", "start": 1713370993137, "stop": 1713371005188, "uuid": "45c98346-98b2-4e07-a526-8b9cc3352f4c", "historyId": "6069eed9804e514a0518a853e9c6c781", "testCaseId": "6069eed9804e514a0518a853e9c6c781", "fullName": "tests.test_order_feed.TestOrderFeed#test_new_order_counter_is_increacing_today", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "DESKTOP-JATFUKA"}, {"name": "thread", "value": "13108-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}